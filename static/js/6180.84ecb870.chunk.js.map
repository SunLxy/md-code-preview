{"version":3,"file":"static/js/6180.84ecb870.chunk.js","mappings":"qMAIMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,aAAe,IAAD,yBACZ,gBACKC,MAAQ,CACXC,SAAS,GAHC,EAiDb,OA5CA,+BACD,WACEC,KAAKC,SAAS,CAAEF,SAAUC,KAAKE,iBAChC,sBACD,WACEF,KAAKC,SAAS,CAAEF,SAAS,MAC1B,oBACD,WACE,OACE,4BACE,UAAC,EAAAI,MAAD,CACEC,KAAK,SACLC,OAAQL,KAAKF,MAAMC,QACnBO,YAAY,2BACZC,KAAK,SACLC,UAAW,WAET,OADAC,QAAQC,IAAI,2IACL,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAASC,KAAKD,SACpBL,QAAQC,IACN,+JACAI,EACAA,EAAS,IAEXE,WAAWF,EAAS,GAAMF,EAAUC,EAAQ,QAC3CI,OAAM,gBAKXC,SAAUlB,KAAKkB,SAASC,KAAKnB,KAAM,WApBrC,6CAsBQ,mCAAe,IAtBvB,kLAwBE,mBACA,kBAzBF,iHA0BqB,+BA1BrB,kBA0BmC,mCA1BnC,iDA2BK,kCA3BL,kBA2BsB,iCA3BtB,0BA6BA,SAAC,EAAAoB,OAAD,CAAQC,QAASrB,KAAKqB,QAAQF,KAAKnB,KAAM,WAAzC,+DAKL,EAlDGH,CAAayB,EAAAA,WAoDnB","sources":[".docs/code-examplessrcappApp/81.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Alert, Button } from \"uiw\";\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible: false,\n    };\n  }\n  onClick() {\n    this.setState({ visible: !this.statevisible });\n  }\n  onClosed() {\n    this.setState({ visible: false });\n  }\n  render() {\n    return (\n      <div>\n        <Alert\n          icon=\"delete\"\n          isOpen={this.state.visible}\n          confirmText=\"确定按钮\"\n          type=\"danger\"\n          onConfirm={() => {\n            console.log(\"确定回调！, 这里是利用Promise等执行完成再去关闭窗口\");\n            return new Promise((resolve, reject) => {\n              const random = Math.random();\n              console.log(\n                \"测试，随机值大于 0.5 执行 resolve 事件，否则 执行 reject 触发 catch 错误\",\n                random,\n                random > 0.5\n              );\n              setTimeout(random > 0.5 ? resolve : reject, 3000);\n            }).catch(() => {\n              // 可以通过下面方式，阻止弹框消失\n              // throw new Error();\n            });\n          }}\n          onClosed={this.onClosed.bind(this, \"visible\")}\n        >\n          这里是利用 <b>Promise</b>{\" \"}\n          的特性，等它执行完成后，再去关闭窗口，达到延迟关闭的效果。\n          <br />\n          <br />\n          这个测试例子，生成随机值判断是否大于 <b>0.5</b> 执行 <b>resolve</b> 事件，否则\n          执行 <b>reject</b> 触发 <b>catch</b> 错误。\n        </Alert>\n        <Button onClick={this.onClick.bind(this, \"visible\")}>\n          延迟关闭对话框\n        </Button>\n      </div>\n    );\n  }\n}\nexport default Demo;"],"names":["Demo","state","visible","this","setState","statevisible","Alert","icon","isOpen","confirmText","type","onConfirm","console","log","Promise","resolve","reject","random","Math","setTimeout","catch","onClosed","bind","Button","onClick","React"],"sourceRoot":""}