{"version":3,"file":"static/js/6081.42a38ad8.chunk.js","mappings":"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","sources":[".docs/examplessrcappApp/importCopyNodeRender.js",".docs/examplessrcappApp/importDescRender.js",".docs/examplessrcappApp/importHeadRender.js",".docs/examplessrcappApp/index.js"],"sourcesContent":["export default {19: `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Alert, ButtonGroup, Button } from \"uiw\";\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible1: false,\n      visible2: false,\n    };\n  }\n  onClick(type) {\n    this.setState({ [type]: !this.state[type] });\n  }\n  onClosed(type) {\n    this.setState({ [type]: false });\n  }\n  render() {\n    return (\n      <div>\n        <Alert\n          isOpen={this.state.visible1}\n          confirmText=\"确定按钮\"\n          onClosed={this.onClosed.bind(this, \"visible1\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          isOpen={this.state.visible2}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          type=\"danger\"\n          onConfirm={() => console.log(\"您点击了确定按钮！\")}\n          onCancel={() => console.log(\"您点击了取消按钮！\")}\n          onClosed={this.onClosed.bind(this, \"visible2\")}\n        >\n          这个对话框有两个按钮，单击 “<b>确定按钮</b>” 或 “<b>取消按钮</b>”\n          后，此对话框将关闭，触发 “<b>onConfirm</b>” 或 “<b>onCancel</b>”\n          事件。用作通知用户重要信息。\n        </Alert>\n        <ButtonGroup>\n          <Button onClick={this.onClick.bind(this, \"visible1\")}>\n            单个按钮确认对话框\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible2\")}>\n            确认对话框\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n}\nexport default Demo;`,\n81: `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Alert, Button } from \"uiw\";\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible: false,\n    };\n  }\n  onClick() {\n    this.setState({ visible: !this.statevisible });\n  }\n  onClosed() {\n    this.setState({ visible: false });\n  }\n  render() {\n    return (\n      <div>\n        <Alert\n          icon=\"delete\"\n          isOpen={this.state.visible}\n          confirmText=\"确定按钮\"\n          type=\"danger\"\n          onConfirm={() => {\n            console.log(\"确定回调！, 这里是利用Promise等执行完成再去关闭窗口\");\n            return new Promise((resolve, reject) => {\n              const random = Math.random();\n              console.log(\n                \"测试，随机值大于 0.5 执行 resolve 事件，否则 执行 reject 触发 catch 错误\",\n                random,\n                random > 0.5\n              );\n              setTimeout(random > 0.5 ? resolve : reject, 3000);\n            }).catch(() => {\n              // 可以通过下面方式，阻止弹框消失\n              // throw new Error();\n            });\n          }}\n          onClosed={this.onClosed.bind(this, \"visible\")}\n        >\n          这里是利用 <b>Promise</b>{\" \"}\n          的特性，等它执行完成后，再去关闭窗口，达到延迟关闭的效果。\n          <br />\n          <br />\n          这个测试例子，生成随机值判断是否大于 <b>0.5</b> 执行 <b>resolve</b> 事件，否则\n          执行 <b>reject</b> 触发 <b>catch</b> 错误。\n        </Alert>\n        <Button onClick={this.onClick.bind(this, \"visible\")}>\n          延迟关闭对话框\n        </Button>\n      </div>\n    );\n  }\n}\nexport default Demo;`,\n147: `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Alert, ButtonGroup, Button } from \"uiw\";\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible1: false,\n      visible2: false,\n    };\n  }\n  onClick(type) {\n    this.setState({ [type]: !this.state[type] });\n  }\n  onClosed(type) {\n    this.setState({ [type]: false });\n  }\n  render() {\n    return (\n      <div>\n        <Alert\n          isOpen={this.state.visible1}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          icon=\"information\"\n          type=\"primary\"\n          onClosed={this.onClosed.bind(this, \"visible1\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          isOpen={this.state.visible2}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          icon=\"circle-check\"\n          type=\"success\"\n          onClosed={this.onClosed.bind(this, \"visible2\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          isOpen={this.state.visible3}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          icon=\"warning\"\n          type=\"warning\"\n          onClosed={this.onClosed.bind(this, \"visible3\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          isOpen={this.state.visible4}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          icon=\"circle-close\"\n          type=\"danger\"\n          onClosed={this.onClosed.bind(this, \"visible4\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          isOpen={this.state.visible5}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          type=\"light\"\n          onClosed={this.onClosed.bind(this, \"visible5\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          isOpen={this.state.visible6}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          type=\"dark\"\n          onClosed={this.onClosed.bind(this, \"visible6\")}\n        >\n          这个对话框有两个按钮，单击 “<b>确定按钮</b>” 或 “<b>取消按钮</b>”\n          后，此对话框将关闭，触发 “<b>onConfirm</b>” 或 “<b>onCancel</b>”\n          事件。用作通知用户重要信息。\n        </Alert>\n        <ButtonGroup>\n          <Button onClick={this.onClick.bind(this, \"visible1\")} type=\"primary\">\n            主要\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible2\")} type=\"success\">\n            成功\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible3\")} type=\"warning\">\n            警告\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible4\")} type=\"danger\">\n            错误\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible5\")} type=\"light\">\n            亮按钮\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible6\")} type=\"dark\">\n            暗按钮\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n}\nexport default Demo;`,\n255: `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Alert, ButtonGroup, Button } from \"uiw\";\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible1: false,\n      visible2: false,\n    };\n  }\n  onClick(type) {\n    this.setState({ [type]: !this.state[type] });\n  }\n  onClosed(type) {\n    this.setState({ [type]: false });\n  }\n  render() {\n    return (\n      <div>\n        <Alert\n          title=\"带标题的弹出框\"\n          isOpen={this.state.visible1}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          icon=\"information\"\n          type=\"primary\"\n          onClosed={this.onClosed.bind(this, \"visible1\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          title=\"带标题的弹出框\"\n          isOpen={this.state.visible2}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          type=\"success\"\n          onClosed={this.onClosed.bind(this, \"visible2\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          title=\"带标题的弹出框\"\n          isOpen={this.state.visible3}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          icon=\"warning\"\n          type=\"warning\"\n          onClosed={this.onClosed.bind(this, \"visible3\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          title=\"带标题的弹出框\"\n          isOpen={this.state.visible4}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          icon=\"circle-close\"\n          type=\"danger\"\n          onClosed={this.onClosed.bind(this, \"visible4\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          title=\"带标题的弹出框\"\n          isOpen={this.state.visible5}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          type=\"light\"\n          onClosed={this.onClosed.bind(this, \"visible5\")}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        />\n        <Alert\n          title=\"带标题的弹出框\"\n          isOpen={this.state.visible6}\n          confirmText=\"确定按钮\"\n          cancelText=\"取消按钮\"\n          type=\"dark\"\n          onClosed={this.onClosed.bind(this, \"visible6\")}\n        >\n          这个对话框有两个按钮，单击 “<b>确定按钮</b>” 或 “<b>取消按钮</b>”\n          后，此对话框将关闭，触发 “<b>onConfirm</b>” 或 “<b>onCancel</b>”\n          事件。用作通知用户重要信息。\n        </Alert>\n        <ButtonGroup>\n          <Button onClick={this.onClick.bind(this, \"visible1\")} type=\"primary\">\n            主要\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible2\")} type=\"success\">\n            成功\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible3\")} type=\"warning\">\n            警告\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible4\")} type=\"danger\">\n            错误\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible5\")} type=\"light\">\n            亮按钮\n          </Button>\n          <Button onClick={this.onClick.bind(this, \"visible6\")} type=\"dark\">\n            暗按钮\n          </Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n}\nexport default Demo;`,\n370: `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Alert, ButtonGroup, Button } from \"uiw\";\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible: false,\n    };\n  }\n  onClick(type) {\n    this.setState({ visible: !this.state.visible });\n  }\n  onClosed(type) {\n    this.setState({ visible: false });\n  }\n  render() {\n    return (\n      <div>\n        <Alert\n          isOpen={this.state.visible}\n          type=\"danger\"\n          useButton={false}\n          maskClosable={true}\n          onClose={this.onClosed.bind(this)}\n          // onClosed={this.onClosed.bind(this)}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        >\n          这个对话框有两个按钮，单击 “<b>确定按钮</b>” 或 “<b>取消按钮</b>”\n          后，此对话框将关闭，将不触发 “<del>onConfirm</del>” 或 “\n          <del>onCancel</del>” 事件。因为这俩按钮是自定义按钮。\n          <br />\n          <br />\n          <div className=\"w-alert-footer\">\n            <Button type=\"danger\" onClick={this.onClosed.bind(this)}>\n              确定按钮\n            </Button>\n            <Button onClick={this.onClosed.bind(this)}>取消按钮</Button>\n          </div>\n        </Alert>\n        <ButtonGroup>\n          <Button onClick={this.onClick.bind(this)}>单个按钮确认对话框</Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n}\nexport default Demo;`,\n426: `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Alert, ButtonGroup, Button } from \"uiw\";\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible: false,\n    };\n  }\n  onClick(type) {\n    this.setState({ visible: !this.state.visible });\n  }\n  onClosed(type) {\n    this.setState({ visible: false });\n  }\n  render() {\n    return (\n      <div>\n        <Alert\n          isOpen={this.state.visible}\n          type=\"danger\"\n          maskClosable={true}\n          hasBackdrop={false}\n          onClose={this.onClosed.bind(this)}\n          onClosed={this.onClosed.bind(this)}\n          content=\"这个对话框只有两个个按钮，单击“确定按钮”后，此对话框将关闭。用作通知用户重要信息。\"\n        >\n          这个对话框有两个按钮，单击 “<b>确定按钮</b>” 或 “<b>取消按钮</b>”\n          后，此对话框将关闭，将不触发 “<del>onConfirm</del>” 或 “\n          <del>onCancel</del>” 事件。因为这俩按钮是自定义按钮。\n        </Alert>\n        <ButtonGroup>\n          <Button onClick={this.onClick.bind(this)}>单个按钮确认对话框</Button>\n        </ButtonGroup>\n      </div>\n    );\n  }\n}\nexport default Demo;`,\n}","import React from \"react\";\nexport default {81:<React.Fragment><p >这里是利用 <code >Promise</code> 等它执行完成再去关闭窗口</p></React.Fragment>,\n147:<React.Fragment><p >通过设置 <code >icon</code> 和 <code >type</code> 参数设置带状态的弹出对话框。</p></React.Fragment>,\n370:<React.Fragment><p >这个对话框有两个按钮，单击 <strong ><code >确定按钮</code></strong> 或 <strong ><code >取消按钮</code></strong> 后，此对话框将关闭，将不触发 <del ><code >onConfirm</code></del> 或 <del ><code >onCancel</code></del> 事件。因为这俩按钮是自定义按钮。你可以正对自定义按钮外面的对象定义 <code >className&#61;\"w-alert-footer\"</code> 将显示默认样式。</p></React.Fragment>,\n}","import React from \"react\";\nexport default {19:<React.Fragment><h2  id={`基本用法`}><a  className={`anchor`} aria-hidden={`true`} tabIndex={-1}  href={`#基本用法`}><svg  className={`octicon octicon-link`} viewBox={`0 0 16 16`} version={`1.1`} width={`16`} height={`16`} aria-hidden={`true`}><path  fillRule={`evenodd`} d={`M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z`}></path></svg></a>基本用法</h2></React.Fragment>,\n81:<React.Fragment><h2  id={`延迟关闭对话框`}><a  className={`anchor`} aria-hidden={`true`} tabIndex={-1}  href={`#延迟关闭对话框`}><svg  className={`octicon octicon-link`} viewBox={`0 0 16 16`} version={`1.1`} width={`16`} height={`16`} aria-hidden={`true`}><path  fillRule={`evenodd`} d={`M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z`}></path></svg></a>延迟关闭对话框</h2></React.Fragment>,\n147:<React.Fragment><h2  id={`带图标的弹出框`}><a  className={`anchor`} aria-hidden={`true`} tabIndex={-1}  href={`#带图标的弹出框`}><svg  className={`octicon octicon-link`} viewBox={`0 0 16 16`} version={`1.1`} width={`16`} height={`16`} aria-hidden={`true`}><path  fillRule={`evenodd`} d={`M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z`}></path></svg></a>带图标的弹出框</h2></React.Fragment>,\n255:<React.Fragment><h2  id={`带标题的弹出框`}><a  className={`anchor`} aria-hidden={`true`} tabIndex={-1}  href={`#带标题的弹出框`}><svg  className={`octicon octicon-link`} viewBox={`0 0 16 16`} version={`1.1`} width={`16`} height={`16`} aria-hidden={`true`}><path  fillRule={`evenodd`} d={`M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z`}></path></svg></a>带标题的弹出框</h2></React.Fragment>,\n370:<React.Fragment><h3  id={`自定义按钮`}><a  className={`anchor`} aria-hidden={`true`} tabIndex={-1}  href={`#自定义按钮`}><svg  className={`octicon octicon-link`} viewBox={`0 0 16 16`} version={`1.1`} width={`16`} height={`16`} aria-hidden={`true`}><path  fillRule={`evenodd`} d={`M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z`}></path></svg></a>自定义按钮</h3></React.Fragment>,\n426:<React.Fragment><h3  id={`不显示遮罩层`}><a  className={`anchor`} aria-hidden={`true`} tabIndex={-1}  href={`#不显示遮罩层`}><svg  className={`octicon octicon-link`} viewBox={`0 0 16 16`} version={`1.1`} width={`16`} height={`16`} aria-hidden={`true`}><path  fillRule={`evenodd`} d={`M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z`}></path></svg></a>不显示遮罩层</h3></React.Fragment>,\n}","\n  import React from \"react\";\n  import \"md-code-preview/lib/styles/markdown.less\"\n  import importCopyNodeRender from \"./importCopyNodeRender\"\n  import importHeadRender from \"./importHeadRender\"\n  import importDescRender from \"./importDescRender\"\n  import importCodeRender from \"./importCodeRender\"\n  import importBaseCodeRender from \"./importBaseCodeRender\"\n  import copyTextToClipboard from '@uiw/copy-to-clipboard';\n  import MdCodePreview from \"md-code-preview\"\n  export default ()=>{\n    return <div className=\"wmde-markdown wmde-markdown-color\">\n    <h1  id={`alert-确认对话框`}><a  className={`anchor`} aria-hidden={`true`} tabIndex={-1}  href={`#alert-确认对话框`}><svg  className={`octicon octicon-link`} viewBox={`0 0 16 16`} version={`1.1`} width={`16`} height={`16`} aria-hidden={`true`}><path  fillRule={`evenodd`} d={`M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z`}></path></svg></a>Alert 确认对话框</h1><p ><a  href={`https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-alert/file/README.md`}><img  src={`https://img.shields.io/badge/Open%20in-unpkg-blue`} alt={`Open in unpkg`}></img></a><a  href={`https://www.npmjs.com/package/@uiw/react-alert`}><img  src={`https://img.shields.io/npm/dm/@uiw/react-alert.svg?style=flat`} alt={`NPM Downloads`}></img></a><a  href={`https://npmjs.com/@uiw/react-alert`}><img  src={`https://img.shields.io/npm/v/@uiw/react-alert.svg?label=@uiw/react-alert`} alt={`npm version`}></img></a></p><p >弹出对话框会在继续之前，通知用户重要信息，点击确定后异步关闭对话框。</p><pre  className=\"language-js\" ><code  className=\"language-js code-highlight\" ><span  className=\"code-line\" ><span  className=\"token keyword module\" >import</span> <span  className=\"token imports\" ><span  className=\"token punctuation\" >&#123;</span> <span  className=\"token maybe-class-name\" >Alert</span> <span  className=\"token punctuation\" >&#125;</span></span> <span  className=\"token keyword module\" >from</span> <span  className=\"token string\" >\"uiw\"</span><span  className=\"token punctuation\" >;</span></span><span  className=\"code-line\" ><span  className=\"token comment\" >// or</span></span><span  className=\"code-line\" ><span  className=\"token keyword module\" >import</span> <span  className=\"token imports\" ><span  className=\"token maybe-class-name\" >Alert</span></span> <span  className=\"token keyword module\" >from</span> <span  className=\"token string\" >\"@uiw/react-alert\"</span><span  className=\"token punctuation\" >;</span></span></code><div  onClick={function onClick(event){var target=event.currentTarget||event.target;target.classList.add(\"active\");copyTextToClipboard(target.dataset.code,function(){setTimeout(function(){target.classList.remove(\"active\");},2000);});}}  data-code={`import { Alert } from \"uiw\";\n// or\nimport Alert from \"@uiw/react-alert\";\n`}  className={`copied`}><svg  className={`octicon-copy`} aria-hidden={`true`} viewBox={`0 0 16 16`} fill={`currentColor`} height={12}  width={12} ><path  fillRule={`evenodd`} d={`M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z`}></path><path  fillRule={`evenodd`} d={`M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z`}></path></svg><svg  className={`octicon-check`} aria-hidden={`true`} viewBox={`0 0 16 16`} fill={`currentColor`} height={12}  width={12} ><path  fillRule={`evenodd`} d={`M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z`}></path></svg></div></pre><MdCodePreview \n        copyNodes={importCopyNodeRender[\"19\"]}\n        properties={{\"className\":[\"language-jsx\",\"code-highlight\"],\"bgWhite\":true,\"codeSandbox\":true,\"codePen\":true}}\n        comments={{\n          title:importHeadRender[\"19\"],\n          description:importDescRender[\"19\"],\n        }}\n        \n        code={importCodeRender[\"19\"]}\n        >{importBaseCodeRender[\"19\"]&&importBaseCodeRender[\"19\"]()}</MdCodePreview><MdCodePreview \n        copyNodes={importCopyNodeRender[\"81\"]}\n        properties={{\"className\":[\"language-jsx\",\"code-highlight\"],\"bgWhite\":true,\"codeSandbox\":true,\"codePen\":true}}\n        comments={{\n          title:importHeadRender[\"81\"],\n          description:importDescRender[\"81\"],\n        }}\n        \n        code={importCodeRender[\"81\"]}\n        >{importBaseCodeRender[\"81\"]&&importBaseCodeRender[\"81\"]()}</MdCodePreview><MdCodePreview \n        copyNodes={importCopyNodeRender[\"147\"]}\n        properties={{\"className\":[\"language-jsx\",\"code-highlight\"],\"bgWhite\":true,\"codeSandbox\":true,\"codePen\":true}}\n        comments={{\n          title:importHeadRender[\"147\"],\n          description:importDescRender[\"147\"],\n        }}\n        \n        code={importCodeRender[\"147\"]}\n        >{importBaseCodeRender[\"147\"]&&importBaseCodeRender[\"147\"]()}</MdCodePreview><MdCodePreview \n        copyNodes={importCopyNodeRender[\"255\"]}\n        properties={{\"className\":[\"language-jsx\",\"code-highlight\"],\"bgWhite\":true,\"codeSandbox\":true,\"codePen\":true}}\n        comments={{\n          title:importHeadRender[\"255\"],\n          description:importDescRender[\"255\"],\n        }}\n        \n        code={importCodeRender[\"255\"]}\n        >{importBaseCodeRender[\"255\"]&&importBaseCodeRender[\"255\"]()}</MdCodePreview><MdCodePreview \n        copyNodes={importCopyNodeRender[\"370\"]}\n        properties={{\"className\":[\"language-jsx\",\"code-highlight\"],\"bgWhite\":true,\"codeSandbox\":true,\"codePen\":true}}\n        comments={{\n          title:importHeadRender[\"370\"],\n          description:importDescRender[\"370\"],\n        }}\n        \n        code={importCodeRender[\"370\"]}\n        >{importBaseCodeRender[\"370\"]&&importBaseCodeRender[\"370\"]()}</MdCodePreview><MdCodePreview \n        copyNodes={importCopyNodeRender[\"426\"]}\n        properties={{\"className\":[\"language-jsx\",\"code-highlight\"],\"bgWhite\":true,\"codeSandbox\":true,\"codePen\":true}}\n        comments={{\n          title:importHeadRender[\"426\"],\n          description:importDescRender[\"426\"],\n        }}\n        \n        code={importCodeRender[\"426\"]}\n        >{importBaseCodeRender[\"426\"]&&importBaseCodeRender[\"426\"]()}</MdCodePreview><h2  id={`props`}><a  className={`anchor`} aria-hidden={`true`} tabIndex={-1}  href={`#props`}><svg  className={`octicon octicon-link`} viewBox={`0 0 16 16`} version={`1.1`} width={`16`} height={`16`} aria-hidden={`true`}><path  fillRule={`evenodd`} d={`M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z`}></path></svg></a>Props</h2><p >虽然类似于对 <code >&lt;Modal&gt;</code>，但 <code >&lt;Alert&gt;</code> 更具限制性，只应用于重要信息。此组件继承 <a  href={`#/components/modal`}><code >&lt;Modal&gt;</code></a> 的属性，所以部分参数可以参考 <code >&lt;Modal&gt;</code> 组件。</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table ><thead ><tr ><th >参数</th><th >说明</th><th >类型</th><th >默认值</th></tr></thead><tbody ><tr ><td >onCancel</td><td >取消按钮的回调函数</td><td >Function(e)</td><td >-</td></tr><tr ><td >onConfirm</td><td >点击确定按钮回调</td><td >Function(e)</td><td >-</td></tr><tr ><td >cancelText</td><td >取消按钮文字，</td><td >String</td><td >-</td></tr><tr ><td >confirmText</td><td >确认按钮文字</td><td >String</td><td ><code >确认</code></td></tr><tr ><td >type</td><td >按钮类型跟 <code >&lt;Button&gt;</code> 组件的 <code >type</code> 参数一致，同时会影响按钮颜色。</td><td >String</td><td ><code >light</code></td></tr><tr ><td >icon<a  href={`#/components/modal`}><code >&lt;Modal&gt;</code></a></td><td >设置对话框右上角图标，，设置 <code >type</code> 将图标设置不同的颜色。当前属性为 <a  href={`#/components/icon`}><code >&lt;Icon&gt;</code></a> 组件的 <code >type</code> 属性，所以可以参考该组件自定义图标。</td><td >String/ReactNode</td><td >-</td></tr><tr ><td >title<a  href={`#/components/modal`}><code >&lt;Modal&gt;</code></a></td><td >设置标题</td><td >Function(e)</td><td >-</td></tr><tr ><td >useButton<a  href={`#/components/modal`}><code >&lt;Modal&gt;</code></a></td><td >是否使用默认按钮，如果设置 <code >false</code> 需要自定义按钮关闭</td><td >Boolean</td><td ><code >true</code></td></tr><tr ><td >isOpen<a  href={`#/components/modal`}><code >&lt;Modal&gt;</code></a></td><td >对话框是否可见</td><td >Boolean</td><td ><code >false</code></td></tr><tr ><td >maskClosable<a  href={`#/components/modal`}><code >&lt;Modal&gt;</code></a></td><td >点击遮罩层是否允许关闭</td><td >boolean</td><td ><code >true</code></td></tr></tbody></table><p >更多属性文档请参考 <a  href={`#/components/modal`}>Modal</a>。</p>\n    </div>\n  }\n  "],"names":["id","className","tabIndex","href","viewBox","version","width","height","fillRule","d","src","alt","onClick","event","target","currentTarget","classList","add","copyTextToClipboard","dataset","code","setTimeout","remove","fill","copyNodes","importCopyNodeRender","properties","comments","title","importHeadRender","description","importDescRender","importCodeRender","importBaseCodeRender"],"sourceRoot":""}